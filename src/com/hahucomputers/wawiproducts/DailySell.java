/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hahucomputers.wawiproducts;

import java.io.IOException;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author tom
 */
public class DailySell extends javax.swing.JFrame {

    /**
     * Creates new form daily sell items 
     */
 
    public DailySell() {
        initComponents();
        
                  java.net.URL imageURL = LogIn.class.getResource("/com/hahu/imgs/index.png");
                  ImageIcon img = new ImageIcon(imageURL);
                  this.setIconImage(img.getImage());
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        barcodeID = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        productName = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        quantity = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        customer = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel25 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        custCity = new javax.swing.JTextField();
        registeredDate = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        unitPrice = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        totalPrice = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        sentKillo = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        recKillo = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel31 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(900, 700));
        setPreferredSize(new java.awt.Dimension(900, 700));
        setSize(new java.awt.Dimension(900, 700));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(153, 255, 153));
        jButton1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton1.setText("Save ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 153, 153));
        jButton3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton3.setText("Cancel ");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(0, 153, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel12.setText("Barcode ID *: ");

        barcodeID.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        barcodeID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        barcodeID.setMargin(new java.awt.Insets(20, 20, 20, 20));

        jLabel20.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel20.setText("Product name *:");

        productName.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        productName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        productName.setMargin(new java.awt.Insets(20, 20, 20, 20));
        productName.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                productNameCaretUpdate(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel21.setText("Quantity *:");

        quantity.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        quantity.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quantity.setMargin(new java.awt.Insets(20, 20, 20, 20));
        quantity.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                quantityCaretUpdate(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel22.setText("Customer: ");

        customer.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        customer.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        customer.setMargin(new java.awt.Insets(20, 20, 20, 20));
        customer.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                customerCaretUpdate(evt);
            }
        });

        jComboBox1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "gram", "ml", "liter", "kg", "pacs", "bottle", "other" }));
        jComboBox1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel23.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel23.setText("Payment:");

        jComboBox3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sept", "Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug" }));
        jComboBox3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel25.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel25.setText("City: ");

        jLabel24.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel24.setText("Month:");

        custCity.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        custCity.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        custCity.setMargin(new java.awt.Insets(20, 20, 20, 20));
        custCity.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                custCityCaretUpdate(evt);
            }
        });

        registeredDate.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        registeredDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        registeredDate.setMargin(new java.awt.Insets(20, 20, 20, 20));

        jLabel26.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel26.setText("Date:");

        jLabel27.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel27.setText("Unit price: ");

        unitPrice.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        unitPrice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        unitPrice.setMargin(new java.awt.Insets(20, 20, 20, 20));

        jLabel28.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel28.setText("Total price:");

        totalPrice.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        totalPrice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        totalPrice.setMargin(new java.awt.Insets(20, 20, 20, 20));
        totalPrice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                totalPriceFocusGained(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel29.setText("Sent:");

        sentKillo.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        sentKillo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        sentKillo.setMargin(new java.awt.Insets(20, 20, 20, 20));

        jLabel30.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel30.setText("Recived: ");

        recKillo.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        recKillo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        recKillo.setMargin(new java.awt.Insets(20, 20, 20, 20));

        jComboBox2.setBackground(new java.awt.Color(204, 255, 204));
        jComboBox2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PAID", "ON-HOLD", "UN-PAID" }));
        jComboBox2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Embete & Her Children Milk Process P.L.C ");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Daily Sell Register");

        jLabel17.setFont(new java.awt.Font("Monotype Corsiva", 0, 14)); // NOI18N
        jLabel17.setText("Made By HAHU Computers");

        jLabel18.setFont(new java.awt.Font("Monotype Corsiva", 0, 14)); // NOI18N
        jLabel18.setText("www.hahucomputers.com");

        jLabel19.setFont(new java.awt.Font("Monotype Corsiva", 0, 14)); // NOI18N
        jLabel19.setText("Tell: 0918719362");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hahu/imgs/logo.png"))); // NOI18N

        jList1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jList1.setToolTipText("");
        jList1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jList1FocusLost(evt);
            }
        });
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jLabel31.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel31.setText("Suggestion Box: ");

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hahu/imgs/daysell.png"))); // NOI18N

        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addGap(5, 5, 5))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jComboBox2, javax.swing.GroupLayout.Alignment.TRAILING, 0, 150, Short.MAX_VALUE)
                                                    .addComponent(customer, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(quantity, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(custCity)))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(productName, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                                    .addComponent(barcodeID))))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jCheckBox1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(26, 26, 26)
                                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                        .addGap(48, 48, 48)))
                                .addGap(56, 56, 56)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel29, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                                    .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(registeredDate)
                                    .addComponent(unitPrice)
                                    .addComponent(recKillo)
                                    .addComponent(totalPrice)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(sentKillo, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                        .addGap(630, 630, 630)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(35, 35, 35))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jCheckBox1, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                                .addGap(1, 1, 1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                                    .addComponent(barcodeID, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(productName, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(quantity, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(customer, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                            .addComponent(custCity, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(registeredDate, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(unitPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(totalPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(sentKillo, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                            .addComponent(recKillo, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE))
                        .addGap(21, 21, 21)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 182, Short.MAX_VALUE)
                        .addGap(23, 23, 23)
                        .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private static final String USER_NAME = "root";
    private static final String USER_PASS =  "hahucomputers123";
    // Import a class to add the daily sell item to database
    
    private final static InsertProducts new_sell = new InsertProducts();
    private final static GetStockProducts update_stock = new GetStockProducts();
    private final static UpdateProduct update = new UpdateProduct();
    private final static SearchProducts   search = new SearchProducts();
    
    
    static ErrorLogger err = new ErrorLogger();

   // create a method to be able to display suggesion 
   
   HandleDB hdb = new HandleDB();

  // method to create connection and queries 
    public ResultSet connect(String query) throws SQLException {
    hdb.setHostURL("jdbc:mysql://localhost:3306/wawiproducts?allowMultiQueries=true&autoReconnect=true&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC", USER_NAME, USER_PASS); 
    ResultSet rs = hdb.SetQuery (query);
    return rs;
   }
  
  // Get details of the bar code
    
   public void getBarcodeDetail(String valueToFind) {
          
                 

        String searchProd = "select item_name, unit_price from register_product where barcode_id = "+"'"+valueToFind+"'"+" ;";
         
        String valueGotten = "Nothing matchs..";
        String valueGotten3 = "Nothing matchs..";

         try {

          ResultSet res  = connect(searchProd);
          
            while (res.next()){
                 
                valueGotten = res.getString("item_name");
                valueGotten3 = res.getString("unit_price");
                productName.setText(valueGotten);
                unitPrice.setText(valueGotten3);

            }
            } catch (SQLException ex) {
                Logger.getLogger(QuickSell.class.getName()).log(Level.SEVERE, null, ex);
                ErrorLogger.writeFile("error happend at get barcode detail in daily sell class  " + ex.toString());
                JOptionPane.showMessageDialog (this, "COULD NOT FIND PRODUCT,MAYBE NOT REGISTERED", "ERROR", JOptionPane.ERROR_MESSAGE);

            }

   }
     
     
  // Register products 
    
    private void register(){
    
        String barcode_id = barcodeID.getText();
        String item_name = productName.getText();
        int item_qty =  Integer.parseInt(quantity.getText());
        String cust_name = customer.getText();
        String paid = (String) jComboBox2.getSelectedItem();
        String city = custCity.getText();
        String _month = (String) jComboBox3.getSelectedItem();
        String _date = registeredDate.getText();
        int unit_price = Integer.parseInt(unitPrice.getText());
        int total_price = Integer.parseInt(totalPrice.getText());
        String sent_killo = sentKillo.getText() +" "+ (String) jComboBox1.getSelectedItem();
        int rec_killo = 0;
       
        if (recKillo.getText().isEmpty()){
        rec_killo = 0;
        
        } else{
         rec_killo = Integer.parseInt(recKillo.getText());
        
        }

     // handle the submission
     
        if (barcode_id.isEmpty() || item_name.isEmpty() || quantity.getText().matches("0")){
       
          JOptionPane.showMessageDialog (this, "FIELDS MARKED WITH * CAN NOT BE EMPTY", "ERROR", JOptionPane.ERROR_MESSAGE);
            
          }
        else {
            try {
                  
              // insert the actual sell to daily sell table 
              new_sell.insert(barcode_id, item_name, item_qty, cust_name, paid, city, _month, _date, unit_price, total_price, sent_killo, rec_killo);
              
              // update stock base on the cal value gotten from this item_qty and retrived item from register_product
            
               // calculated value to be inserted to update the stock
                    int cal_qty = 0;
             
              // checks if the item is registered and then sets the quantity to the item quantiyt here
              
              if (search.isBarcode(barcode_id)){          
              // calculated value to be inserted to update the stock
              
                 cal_qty = update_stock.itemsInStock(barcode_id, item_qty );
              
               } else {
                   
                   cal_qty = - item_qty;
               
               }
              // if item is not instock it will insert a quantity of 0  to database --- reference ---
              update.updateItemQty(barcode_id, cal_qty, this);
              
             // JOptionPane.showMessageDialog (this, "Transaction has been saved successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
            
              } catch (IOException ex) {
              Logger.getLogger(DailySell.class.getName()).log(Level.SEVERE, null, ex);
              ErrorLogger.writeFile("Error on insert class, daily sell insert throws: " + ex.toString());
              JOptionPane.showMessageDialog (this, "SUCCESS!", "SUCCESS", JOptionPane.ERROR_MESSAGE);
           
           }  catch (SQLException ex) {
              Logger.getLogger(DailySell.class.getName()).log(Level.SEVERE, null, ex);
              ErrorLogger.writeFile("Error on insert class, daily sell insert throws: " + ex.toString());
              JOptionPane.showMessageDialog (this, "FAIL", "ERROR", JOptionPane.ERROR_MESSAGE);
           }
       }
    }
    
    private void setTotal(){
    // possible error handled 
    
       
        int unit_price = Integer.parseInt(unitPrice.getText().trim());
      if (quantity.getText().isEmpty() ||quantity.getText().matches("0") ){
        int tot_price = 1 * unit_price;
        totalPrice.setText(String.valueOf(tot_price));
      } else {
          int qty = Integer.parseInt(quantity.getText().trim());
          int tot_price = qty * unit_price;
          totalPrice.setText(String.valueOf(tot_price));
      }
        
    }
    

    public void serachCity() {
           
        DefaultListModel dlm = new DefaultListModel();
        String valueToFind = custCity.getText().trim();
        String searchProd = "select distinct city from dailysell where city like "+"'%"+valueToFind+"%'"+" ;";
        String valueGotten = "Nothing matchs..";

        try {
            
            ResultSet res = connect(searchProd);
            while (res.next()){
                
                valueGotten = res.getString("city");
                
                dlm.addElement(valueGotten);
         
            }
        } catch (SQLException ex) {
            Logger.getLogger(DailySell.class.getName()).log(Level.SEVERE, null, ex);
            ErrorLogger.writeFile("error happend at search city in daily sell class  " +ex.toString());
        }
           
            jList1.setModel(dlm);   
   }
   
   public void searchProd(){
   
        DefaultListModel dlm = new DefaultListModel();
   
        String valueToFind = productName.getText().trim();
        String searchProd = "select distinct item_name from stock_products where item_name like "+"'%"+valueToFind+"%'"+" ;";
        String valueGotten = "Nothing matchs..";
           
        try {
            ResultSet res = connect(searchProd);
            while (res.next()){
                
                valueGotten = res.getString("item_name");      
                dlm.addElement(valueGotten);
            }
        } catch (SQLException ex) {
            ErrorLogger.writeFile("error happend at search product detail in daily sell class  " +ex.toString());
            Logger.getLogger(DailySell.class.getName()).log(Level.SEVERE, null, ex);
        }
            jList1.setModel(dlm);   
   }
   
      public void searchCust(){
           
        DefaultListModel dlm = new DefaultListModel();
        String valueToFind = customer.getText().trim();
        String searchProd = "select distinct cust_name from dailysell where cust_name like "+"'%"+valueToFind+"%'"+" ;";   
        String valueGotten = "Nothing matchs..";

        try {
            ResultSet res = connect(searchProd);
            while (res.next()){
                
                valueGotten = res.getString("cust_name");
                
                dlm.addElement(valueGotten);
         
            }
        } catch (SQLException ex) {
            ErrorLogger.writeFile("error happend at search customer  in daily sell class  " +ex.toString());
            Logger.getLogger(DailySell.class.getName()).log(Level.SEVERE, null, ex);
        }
           
            jList1.setModel(dlm);   
   }
  
  // Register sold item
   
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        register();   

        barcodeID.setText("");
        productName.setText("");
        customer.setText("");
        custCity.setText("");
        quantity.setText("0");
        unitPrice.setText("0");
        totalPrice.setText("0");
        sentKillo.setText("0");
        recKillo.setText("0");
        jCheckBox1.setSelected(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
   
        new MenuPage().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed
    boolean cityActive = false;
    private void custCityCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_custCityCaretUpdate
       custName= false;
       prodName= false;
       cityActive= true;
        String cust_city = custCity.getText();
        if (!cust_city.isEmpty()){
            serachCity();
        }
    }//GEN-LAST:event_custCityCaretUpdate
  
    // throws error if someone select it and deselect it (box for barcode) --- TODO ----
    
    boolean prodName = false;
    private void productNameCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_productNameCaretUpdate
       cityActive= false;
       custName= false;
       prodName= true;
     if(!jCheckBox1.isSelected()){
        String prod_name = productName.getText();
        if (!prod_name.isEmpty()){
            searchProd();    
        }
       } 
        
    }//GEN-LAST:event_productNameCaretUpdate

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
 
     if (cityActive){
         custCity.setText(jList1.getSelectedValue());
     } else if (prodName){     
         productName.setText(jList1.getSelectedValue());
     } else if (custName){         
         customer.setText(jList1.getSelectedValue());
     }
    }//GEN-LAST:event_jList1MouseClicked

    private void jList1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jList1FocusLost
    
         DefaultListModel dlm = new DefaultListModel();
         dlm.addElement("");
         jList1.setModel(dlm);
    }//GEN-LAST:event_jList1FocusLost

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
    
       Date today = Date.valueOf(LocalDate.now());
       registeredDate.setText(today.toString());
       quantity.setText("0");
       unitPrice.setText("0");
       totalPrice.setText("0");
       recKillo.setText("0");
      
    }//GEN-LAST:event_formWindowOpened

    private void totalPriceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_totalPriceFocusGained
         this.setTotal();
    }//GEN-LAST:event_totalPriceFocusGained

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
      if (!barcodeID.getText().isEmpty()){
        String valueToFind = barcodeID.getText().trim();
        getBarcodeDetail(valueToFind);
      }  else {
      JOptionPane.showMessageDialog (this, "ENTER PRODUCT CODE TO USE THIS FUNCTION", "WARNING", JOptionPane.WARNING_MESSAGE);
      jCheckBox1.setSelected(false);
      }
    }//GEN-LAST:event_jCheckBox1ActionPerformed
   boolean custName = false;
    private void customerCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_customerCaretUpdate
       cityActive= false;
       prodName= false;
       custName= true;
       String cust_name = customer.getText();
        if (!cust_name.isEmpty()){
            searchCust();
        }
        
       
    }//GEN-LAST:event_customerCaretUpdate

    private void quantityCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_quantityCaretUpdate
       
        if (!unitPrice.getText().isEmpty()){   
        this.setTotal();
        }
    }//GEN-LAST:event_quantityCaretUpdate

    /**
     * @param args the command line arguments
     */

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DailySell.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DailySell.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DailySell.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DailySell.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DailySell().setVisible(true);
                   
        }
            
            
        });
       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField barcodeID;
    private javax.swing.JTextField custCity;
    private javax.swing.JTextField customer;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField productName;
    private javax.swing.JTextField quantity;
    private javax.swing.JTextField recKillo;
    private javax.swing.JTextField registeredDate;
    private javax.swing.JTextField sentKillo;
    private javax.swing.JTextField totalPrice;
    private javax.swing.JTextField unitPrice;
    // End of variables declaration//GEN-END:variables
}
